---
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Tabs from "@components/Tabs.astro";

// @ts-ignore
import Notifications from '@components/Notification.astro';

import "../styles.css";
import "../style/global.css"

export interface Props {
	title: string;
}

const { title } = Astro.props;

const { url } = Astro;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<script is:inline type="module">
			let theme = localStorage.getItem('theme') || 'amoled';
            document.documentElement.setAttribute('data-theme', theme);

			window.faviconLoad = function faviconLoad() {
				var faviconPath = localStorage.getItem('savedFavicon');
				var faviconLink = document.querySelector('link[rel="icon"]');
				if (!faviconLink) {
				faviconLink = document.createElement('link');
				faviconLink.rel = 'icon';
				document.head.appendChild(faviconLink);
				}
				faviconLink.href = faviconPath;
				localStorage.setItem('savedFavicon', faviconPath);
			}

			window.titleLoad = function titleLoad() {
				var title = localStorage.getItem('savedTitle');
				document.title = title;
			};
		</script>
        <script>
			window.colors = {
				error: {
					color: "#FFFFFF",
					backgroundColor: '#E85742'
				},
				success: {
					color: "#FFFFFF",
					backgroundColor: '#55CA92'
				},
				warning: {
					color: "#333333",
					backgroundColor: '#F5E273'
				},
				info: {
					color: "#FFFFFF",
					backgroundColor: '#4990E2'
				}
			}

			const queue = [];

			window.notify = {
				show(msg = "", status = "info", time = 2000, force = false) {
					if (queue.length && !force) return queue.push([...arguments]);

					var notif = document.getElementById('toast-notification');

					notif.onclick = notify.hide;

					notif.style.transform = 'translateY(100%)';
					notif.style.background = colors[status].backgroundColor;
					notif.style.color = colors[status].color;
					notif.innerHTML = msg;

					queue.push([...arguments]);

					if (time > -1) setTimeout(function() {
						notif.style.transform = 'translateY(0)';

						setTimeout(function() {
							queue.splice(0, 1);
							if (queue.length) notify.show(...queue.splice(0, 1)[0], true);
						}, 300);
					}, time);
				},
				hide() {
					var notif = document.getElementById('toast-notification');

					notif.style.transform = 'translateY(0)';

					setTimeout(function() {
						queue.splice(0, 1);
						if (queue.length) notify.show(...queue.splice(0, 1)[0], true);
					}, 300);
				}
			}

            window.console.error = new Proxy(window.console.error, {
                apply: function(target, thisArg, argumentsList) {
                    if (argumentsList[0].includes('Warning: ReactDOM.render is no longer supported in React 18')) {
                        return;
                    } else {
                        return Reflect.apply(target, thisArg, argumentsList);
                    }
                }
            });
        </script>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@300&display=swap" rel="stylesheet">
		<link href="/font/font.css" rel="stylesheet">
		<link rel="preconnect" crossorigin href="https://classroom.google.com" />
		{
			[
				'/bare',
			].map(e=>{
				return <link rel="prefetch" as="fetch" href={'https://' + e} />;
			})
		}
		<meta name="generator" content={ Astro.generator } />
		<script defer src="/js/ui.js"></script>
		<script async src="/js/sw.js"></script>

		<title>{title}</title>
	</head>
	<body>
		<div class="page-load-progress"></div>
		<main class="">
			<Header data={url} />
			<Notifications />
			<slot />
			<Footer />
			<Tabs />
		</main>
		<script is:inline type="module">
			if (localStorage.getItem('savedFavicon')) {
				faviconLoad();
			}
			if (localStorage.getItem('savedTitle')) {
				titleLoad();
			}
		</script>
	</body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
	}

	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	.page-load-progress {
		border: none;
		background: #ddd;
		height: 2px;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		transition: 0.1s ease;
		display: none;
	}
</style>
